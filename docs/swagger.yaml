definitions:
  entity.Person:
    properties:
      age:
        type: integer
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationalize:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  transport.createPersonInput:
    properties:
      name:
        maxLength: 64
        minLength: 2
        type: string
      patronymic:
        type: string
      surname:
        maxLength: 64
        minLength: 2
        type: string
    required:
    - name
    - surname
    type: object
  transport.errorResponse:
    properties:
      error:
        type: string
    type: object
  transport.getPersonResponse:
    properties:
      person:
        $ref: '#/definitions/entity.Person'
    type: object
  transport.getPersonsResponse:
    properties:
      person:
        items:
          $ref: '#/definitions/entity.Person'
        type: array
    type: object
  transport.successResponse:
    properties:
      message:
        type: string
    type: object
  transport.updatePersonInput:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationalize:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/person/{id}:
    delete:
      description: Delete person by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transport.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.errorResponse'
      summary: Delete person
      tags:
      - notes
  /api/v1/persons:
    get:
      description: Get all persons
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: surname
        in: query
        name: surname
        type: string
      - description: patronymic
        in: query
        name: patronymic
        type: string
      - description: age
        in: query
        name: age
        type: integer
      - description: gender
        in: query
        name: gender
        type: string
      - description: nationalize
        in: query
        name: nationalize
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transport.getPersonsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.errorResponse'
      summary: Get all persons
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Create person
      parameters:
      - description: Person's information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/transport.createPersonInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/transport.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.errorResponse'
      summary: Create person
      tags:
      - persons
  /api/v1/persons/{id}:
    get:
      description: Get person by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transport.getPersonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.errorResponse'
      summary: Get person by id
      tags:
      - persons
    patch:
      consumes:
      - application/json
      description: update person by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: updating params
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/transport.updatePersonInput'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/transport.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.errorResponse'
      summary: Update persons
      tags:
      - persons
swagger: "2.0"
