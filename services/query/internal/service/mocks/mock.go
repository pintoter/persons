// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/pintoter/persons/services/query/internal/entity"
	service "github.com/pintoter/persons/services/query/internal/service"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetPerson mocks base method.
func (m *MockRepository) GetPerson(ctx context.Context, id int) (entity.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPerson", ctx, id)
	ret0, _ := ret[0].(entity.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPerson indicates an expected call of GetPerson.
func (mr *MockRepositoryMockRecorder) GetPerson(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPerson", reflect.TypeOf((*MockRepository)(nil).GetPerson), ctx, id)
}

// GetPersons mocks base method.
func (m *MockRepository) GetPersons(ctx context.Context, filters *service.GetFilters) ([]entity.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersons", ctx, filters)
	ret0, _ := ret[0].([]entity.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersons indicates an expected call of GetPersons.
func (mr *MockRepositoryMockRecorder) GetPersons(ctx, filters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersons", reflect.TypeOf((*MockRepository)(nil).GetPersons), ctx, filters)
}
