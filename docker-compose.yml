version: '3.9'

services:
  command:
    build: 
      context: ./services/command
      # dockerfile: ./services/command/Dockerfile
    env_file: 
      - .env
    ports:
      - "8080"
    depends_on:
      - postgres
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - persons-backend
    restart: unless-stopped

  query:
    build:
      context: ./services/query
      # dockerfile: ./services/query/Dockerfile
    env_file: 
      - .env
    ports:
      - "8080"
    depends_on:
      - postgres
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - persons-backend
    restart: unless-stopped

  postgres:
    image: postgres:latest
    hostname: postgres
    env_file: 
      - .env
    ports:
      - "${LOCAL_DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pg-data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - persons-backend

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "8080:80"
    depends_on:
      - command
      - query
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      - persons-backend

networks:
  persons-backend:
    driver: bridge

volumes:
  pg-data:
  